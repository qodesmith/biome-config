{
  "a11y": [
    {
      "name": "noAccessKey",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that the accessKey attribute is not used on any HTML element.",
      "url": "https://biomejs.dev/linter/rules/no-access-key/"
    },
    {
      "name": "noAriaHiddenOnFocusable",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that aria-hidden=\"true\" is not set on focusable elements.",
      "url": "https://biomejs.dev/linter/rules/no-aria-hidden-on-focusable/"
    },
    {
      "name": "noAriaUnsupportedElements",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes.",
      "url": "https://biomejs.dev/linter/rules/no-aria-unsupported-elements/"
    },
    {
      "name": "noAutofocus",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that autoFocus prop is not used on elements.",
      "url": "https://biomejs.dev/linter/rules/no-autofocus/"
    },
    {
      "name": "noDistractingElements",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforces that no distracting elements are used.",
      "url": "https://biomejs.dev/linter/rules/no-distracting-elements/"
    },
    {
      "name": "noHeaderScope",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "The scope prop should be used only on \\<th> elements.",
      "url": "https://biomejs.dev/linter/rules/no-header-scope/"
    },
    {
      "name": "noInteractiveElementToNoninteractiveRole",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that non-interactive ARIA roles are not assigned to interactive HTML elements.",
      "url": "https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role/"
    },
    {
      "name": "noLabelWithoutControl",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that a label element or component has a text label and an associated input.",
      "url": "https://biomejs.dev/linter/rules/no-label-without-control/"
    },
    {
      "name": "noNoninteractiveElementToInteractiveRole",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that interactive ARIA roles are not assigned to non-interactive HTML elements.",
      "url": "https://biomejs.dev/linter/rules/no-noninteractive-element-to-interactive-role/"
    },
    {
      "name": "noNoninteractiveTabindex",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that tabIndex is not assigned to non-interactive HTML elements.",
      "url": "https://biomejs.dev/linter/rules/no-noninteractive-tabindex/"
    },
    {
      "name": "noPositiveTabindex",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Prevent the usage of positive integers on tabIndex property",
      "url": "https://biomejs.dev/linter/rules/no-positive-tabindex/"
    },
    {
      "name": "noRedundantAlt",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce img alt prop does not contain the word \"image\", \"picture\", or \"photo\".",
      "url": "https://biomejs.dev/linter/rules/no-redundant-alt/"
    },
    {
      "name": "noRedundantRoles",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce explicit role property is not the same as implicit/default role property on an element.",
      "url": "https://biomejs.dev/linter/rules/no-redundant-roles/"
    },
    {
      "name": "noStaticElementInteractions",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that static, visible elements (such as \\<div>) that have click handlers use the valid role attribute.",
      "url": "https://biomejs.dev/linter/rules/no-static-element-interactions/"
    },
    {
      "name": "noSvgWithoutTitle",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforces the usage of the title element for the svg element.",
      "url": "https://biomejs.dev/linter/rules/no-svg-without-title/"
    },
    {
      "name": "useAltText",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that all elements that require alternative text have meaningful information to relay back to the end user.",
      "url": "https://biomejs.dev/linter/rules/use-alt-text/"
    },
    {
      "name": "useAnchorContent",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that anchors have content and that the content is accessible to screen readers.",
      "url": "https://biomejs.dev/linter/rules/use-anchor-content/"
    },
    {
      "name": "useAriaActivedescendantWithTabindex",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce that tabIndex is assigned to non-interactive HTML elements with aria-activedescendant.",
      "url": "https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex/"
    },
    {
      "name": "useAriaPropsForRole",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that elements with ARIA roles must have all required ARIA attributes for that role.",
      "url": "https://biomejs.dev/linter/rules/use-aria-props-for-role/"
    },
    {
      "name": "useAriaPropsSupportedByRole",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that ARIA properties are valid for the roles that are supported by the element.",
      "url": "https://biomejs.dev/linter/rules/use-aria-props-supported-by-role/"
    },
    {
      "name": "useButtonType",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforces the usage of the attribute type for the element button",
      "url": "https://biomejs.dev/linter/rules/use-button-type/"
    },
    {
      "name": "useFocusableInteractive",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Elements with an interactive role and interaction handlers must be focusable.",
      "url": "https://biomejs.dev/linter/rules/use-focusable-interactive/"
    },
    {
      "name": "useGenericFontNames",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow a missing generic family keyword within font families.",
      "url": "https://biomejs.dev/linter/rules/use-generic-font-names/"
    },
    {
      "name": "useHeadingContent",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that heading elements (h1, h2, etc.) have content and that the content is accessible to screen readers. Accessible means that it is not hidden using the aria-hidden prop.",
      "url": "https://biomejs.dev/linter/rules/use-heading-content/"
    },
    {
      "name": "useHtmlLang",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that html element has lang attribute.",
      "url": "https://biomejs.dev/linter/rules/use-html-lang/"
    },
    {
      "name": "useIframeTitle",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforces the usage of the attribute title for the element iframe.",
      "url": "https://biomejs.dev/linter/rules/use-iframe-title/"
    },
    {
      "name": "useKeyWithClickEvents",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce onClick is accompanied by at least one of the following: onKeyUp, onKeyDown, onKeyPress.",
      "url": "https://biomejs.dev/linter/rules/use-key-with-click-events/"
    },
    {
      "name": "useKeyWithMouseEvents",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce onMouseOver / onMouseOut are accompanied by onFocus / onBlur.",
      "url": "https://biomejs.dev/linter/rules/use-key-with-mouse-events/"
    },
    {
      "name": "useMediaCaption",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforces that audio and video elements must have a track for captions.",
      "url": "https://biomejs.dev/linter/rules/use-media-caption/"
    },
    {
      "name": "useSemanticElements",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "It detects the use of role attributes in JSX elements and suggests using semantic elements instead.",
      "url": "https://biomejs.dev/linter/rules/use-semantic-elements/"
    },
    {
      "name": "useValidAnchor",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that all anchors are valid, and they are navigable elements.",
      "url": "https://biomejs.dev/linter/rules/use-valid-anchor/"
    },
    {
      "name": "useValidAriaProps",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Ensures that ARIA properties aria-* are all valid.",
      "url": "https://biomejs.dev/linter/rules/use-valid-aria-props/"
    },
    {
      "name": "useValidAriaRole",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
      "url": "https://biomejs.dev/linter/rules/use-valid-aria-role/"
    },
    {
      "name": "useValidAriaValues",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that ARIA state and property values are valid.",
      "url": "https://biomejs.dev/linter/rules/use-valid-aria-values/"
    },
    {
      "name": "useValidAutocomplete",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Use valid values for the autocomplete attribute on input elements.",
      "url": "https://biomejs.dev/linter/rules/use-valid-autocomplete/"
    },
    {
      "name": "useValidLang",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Ensure that the attribute passed to the lang attribute is a correct ISO language and/or country.",
      "url": "https://biomejs.dev/linter/rules/use-valid-lang/"
    }
  ],
  "complexity": [
    {
      "name": "noAdjacentSpacesInRegex",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow unclear usage of consecutive space characters in regular expression literals",
      "url": "https://biomejs.dev/linter/rules/no-adjacent-spaces-in-regex/"
    },
    {
      "name": "noArguments",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of arguments.",
      "url": "https://biomejs.dev/linter/rules/no-arguments/"
    },
    {
      "name": "noBannedTypes",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow primitive type aliases and misleading types.",
      "url": "https://biomejs.dev/linter/rules/no-banned-types/"
    },
    {
      "name": "noCommaOperator",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow comma operator.",
      "url": "https://biomejs.dev/linter/rules/no-comma-operator/"
    },
    {
      "name": "noEmptyTypeParameters",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow empty type parameters in type aliases and interfaces.",
      "url": "https://biomejs.dev/linter/rules/no-empty-type-parameters/"
    },
    {
      "name": "noExcessiveCognitiveComplexity",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow functions that exceed a given Cognitive Complexity score.",
      "url": "https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity/"
    },
    {
      "name": "noExcessiveNestedTestSuites",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "This rule enforces a maximum depth to nested describe() in test files.",
      "url": "https://biomejs.dev/linter/rules/no-excessive-nested-test-suites/"
    },
    {
      "name": "noExtraBooleanCast",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow unnecessary boolean casts",
      "url": "https://biomejs.dev/linter/rules/no-extra-boolean-cast/"
    },
    {
      "name": "noFlatMapIdentity",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow to use unnecessary callback on flatMap.",
      "url": "https://biomejs.dev/linter/rules/no-flat-map-identity/"
    },
    {
      "name": "noForEach",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prefer for...of statement instead of Array.forEach.",
      "url": "https://biomejs.dev/linter/rules/no-for-each/"
    },
    {
      "name": "noStaticOnlyClass",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "This rule reports when a class has no non-static members, such as for a class used exclusively as a static namespace.",
      "url": "https://biomejs.dev/linter/rules/no-static-only-class/"
    },
    {
      "name": "noThisInStatic",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow this and super in static contexts.",
      "url": "https://biomejs.dev/linter/rules/no-this-in-static/"
    },
    {
      "name": "noUselessCatch",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow unnecessary catch clauses.",
      "url": "https://biomejs.dev/linter/rules/no-useless-catch/"
    },
    {
      "name": "noUselessConstructor",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow unnecessary constructors.",
      "url": "https://biomejs.dev/linter/rules/no-useless-constructor/"
    },
    {
      "name": "noUselessContinue",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Avoid using unnecessary continue.",
      "url": "https://biomejs.dev/linter/rules/no-useless-continue/"
    },
    {
      "name": "noUselessEmptyExport",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow empty exports that don't change anything in a module file.",
      "url": "https://biomejs.dev/linter/rules/no-useless-empty-export/"
    },
    {
      "name": "noUselessEscapeInRegex",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow unnecessary escape sequence in regular expression literals.",
      "url": "https://biomejs.dev/linter/rules/no-useless-escape-in-regex/"
    },
    {
      "name": "noUselessFragments",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow unnecessary fragments",
      "url": "https://biomejs.dev/linter/rules/no-useless-fragments/"
    },
    {
      "name": "noUselessLabel",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow unnecessary labels.",
      "url": "https://biomejs.dev/linter/rules/no-useless-label/"
    },
    {
      "name": "noUselessLoneBlockStatements",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow unnecessary nested block statements.",
      "url": "https://biomejs.dev/linter/rules/no-useless-lone-block-statements/"
    },
    {
      "name": "noUselessRename",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow renaming import, export, and destructured assignments to the same name.",
      "url": "https://biomejs.dev/linter/rules/no-useless-rename/"
    },
    {
      "name": "noUselessStringConcat",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow unnecessary concatenation of string or template literals.",
      "url": "https://biomejs.dev/linter/rules/no-useless-string-concat/"
    },
    {
      "name": "noUselessStringRaw",
      "recommended": true,
      "fix": "none",
      "severity": "info",
      "description": "Disallow unnecessary String.raw function in template string literals without any escape sequence.",
      "url": "https://biomejs.dev/linter/rules/no-useless-string-raw/"
    },
    {
      "name": "noUselessSwitchCase",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow useless case in switch statements.",
      "url": "https://biomejs.dev/linter/rules/no-useless-switch-case/"
    },
    {
      "name": "noUselessTernary",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow ternary operators when simpler alternatives exist.",
      "url": "https://biomejs.dev/linter/rules/no-useless-ternary/"
    },
    {
      "name": "noUselessThisAlias",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow useless this aliasing.",
      "url": "https://biomejs.dev/linter/rules/no-useless-this-alias/"
    },
    {
      "name": "noUselessTypeConstraint",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow using any or unknown as type constraint.",
      "url": "https://biomejs.dev/linter/rules/no-useless-type-constraint/"
    },
    {
      "name": "noUselessUndefinedInitialization",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow initializing variables to undefined.",
      "url": "https://biomejs.dev/linter/rules/no-useless-undefined-initialization/"
    },
    {
      "name": "noVoid",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of void operators, which is not a familiar operator.",
      "url": "https://biomejs.dev/linter/rules/no-void/"
    },
    {
      "name": "useArrowFunction",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Use arrow functions over function expressions.",
      "url": "https://biomejs.dev/linter/rules/use-arrow-function/"
    },
    {
      "name": "useDateNow",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Use Date.now() to get the number of milliseconds since the Unix Epoch.",
      "url": "https://biomejs.dev/linter/rules/use-date-now/"
    },
    {
      "name": "useFlatMap",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Promotes the use of .flatMap() when map().flat() are used together.",
      "url": "https://biomejs.dev/linter/rules/use-flat-map/"
    },
    {
      "name": "useLiteralKeys",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce the usage of a literal access to properties over computed property access.",
      "url": "https://biomejs.dev/linter/rules/use-literal-keys/"
    },
    {
      "name": "useNumericLiterals",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow parseInt() and Number.parseInt() in favor of binary, octal, and hexadecimal literals",
      "url": "https://biomejs.dev/linter/rules/use-numeric-literals/"
    },
    {
      "name": "useOptionalChain",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Enforce using concise optional chain instead of chained logical expressions.",
      "url": "https://biomejs.dev/linter/rules/use-optional-chain/"
    },
    {
      "name": "useRegexLiterals",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Enforce the use of the regular expression literals instead of the RegExp constructor if possible.",
      "url": "https://biomejs.dev/linter/rules/use-regex-literals/"
    },
    {
      "name": "useSimpleNumberKeys",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow number literal object member names which are not base 10 or use underscore as separator.",
      "url": "https://biomejs.dev/linter/rules/use-simple-number-keys/"
    },
    {
      "name": "useSimplifiedLogicExpression",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Discard redundant terms from logical expressions.",
      "url": "https://biomejs.dev/linter/rules/use-simplified-logic-expression/"
    },
    {
      "name": "useWhile",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Enforce the use of while loops instead of for loops when the initializer and update expressions are not needed.",
      "url": "https://biomejs.dev/linter/rules/use-while/"
    }
  ],
  "correctness": [
    {
      "name": "noChildrenProp",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Prevent passing of children as props.",
      "url": "https://biomejs.dev/linter/rules/no-children-prop/"
    },
    {
      "name": "noConstAssign",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Prevents from having const variables being re-assigned.",
      "url": "https://biomejs.dev/linter/rules/no-const-assign/"
    },
    {
      "name": "noConstantCondition",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow constant expressions in conditions",
      "url": "https://biomejs.dev/linter/rules/no-constant-condition/"
    },
    {
      "name": "noConstantMathMinMaxClamp",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Disallow the use of Math.min and Math.max to clamp a value where the result itself is constant.",
      "url": "https://biomejs.dev/linter/rules/no-constant-math-min-max-clamp/"
    },
    {
      "name": "noConstructorReturn",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow returning a value from a constructor.",
      "url": "https://biomejs.dev/linter/rules/no-constructor-return/"
    },
    {
      "name": "noEmptyCharacterClassInRegex",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow empty character classes in regular expression literals.",
      "url": "https://biomejs.dev/linter/rules/no-empty-character-class-in-regex/"
    },
    {
      "name": "noEmptyPattern",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallows empty destructuring patterns.",
      "url": "https://biomejs.dev/linter/rules/no-empty-pattern/"
    },
    {
      "name": "noGlobalObjectCalls",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow calling global object properties as functions",
      "url": "https://biomejs.dev/linter/rules/no-global-object-calls/"
    },
    {
      "name": "noInnerDeclarations",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow function and var declarations that are accessible outside their block.",
      "url": "https://biomejs.dev/linter/rules/no-inner-declarations/"
    },
    {
      "name": "noInvalidBuiltinInstantiation",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Ensure that builtins are correctly instantiated.",
      "url": "https://biomejs.dev/linter/rules/no-invalid-builtin-instantiation/"
    },
    {
      "name": "noInvalidConstructorSuper",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Prevents the incorrect use of super() inside classes. It also checks whether a call super() is missing from classes that extends other constructors.",
      "url": "https://biomejs.dev/linter/rules/no-invalid-constructor-super/"
    },
    {
      "name": "noInvalidDirectionInLinearGradient",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow non-standard direction values for linear gradient functions.",
      "url": "https://biomejs.dev/linter/rules/no-invalid-direction-in-linear-gradient/"
    },
    {
      "name": "noInvalidGridAreas",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallows invalid named grid areas in CSS Grid Layouts.",
      "url": "https://biomejs.dev/linter/rules/no-invalid-grid-areas/"
    },
    {
      "name": "noInvalidPositionAtImportRule",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow the use of @import at-rules in invalid positions.",
      "url": "https://biomejs.dev/linter/rules/no-invalid-position-at-import-rule/"
    },
    {
      "name": "noInvalidUseBeforeDeclaration",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow the use of variables and function parameters before their declaration",
      "url": "https://biomejs.dev/linter/rules/no-invalid-use-before-declaration/"
    },
    {
      "name": "noMissingVarFunction",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow missing var function for css variables.",
      "url": "https://biomejs.dev/linter/rules/no-missing-var-function/"
    },
    {
      "name": "noNodejsModules",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Forbid the use of Node.js builtin modules.",
      "url": "https://biomejs.dev/linter/rules/no-nodejs-modules/"
    },
    {
      "name": "noNonoctalDecimalEscape",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Disallow \\8 and \\9 escape sequences in string literals.",
      "url": "https://biomejs.dev/linter/rules/no-nonoctal-decimal-escape/"
    },
    {
      "name": "noPrecisionLoss",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow literal numbers that lose precision",
      "url": "https://biomejs.dev/linter/rules/no-precision-loss/"
    },
    {
      "name": "noPrivateImports",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Restrict imports of private exports.",
      "url": "https://biomejs.dev/linter/rules/no-private-imports/"
    },
    {
      "name": "noRenderReturnValue",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Prevent the usage of the return value of React.render.",
      "url": "https://biomejs.dev/linter/rules/no-render-return-value/"
    },
    {
      "name": "noSelfAssign",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow assignments where both sides are exactly the same.",
      "url": "https://biomejs.dev/linter/rules/no-self-assign/"
    },
    {
      "name": "noSetterReturn",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow returning a value from a setter",
      "url": "https://biomejs.dev/linter/rules/no-setter-return/"
    },
    {
      "name": "noStringCaseMismatch",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Disallow comparison of expressions modifying the string case with non-compliant value.",
      "url": "https://biomejs.dev/linter/rules/no-string-case-mismatch/"
    },
    {
      "name": "noSwitchDeclarations",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Disallow lexical declarations in switch clauses.",
      "url": "https://biomejs.dev/linter/rules/no-switch-declarations/"
    },
    {
      "name": "noUndeclaredDependencies",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Disallow the use of dependencies that aren't specified in the package.json.",
      "url": "https://biomejs.dev/linter/rules/no-undeclared-dependencies/"
    },
    {
      "name": "noUndeclaredVariables",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Prevents the usage of variables that haven't been declared inside the document.",
      "url": "https://biomejs.dev/linter/rules/no-undeclared-variables/"
    },
    {
      "name": "noUnknownFunction",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown CSS value functions.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-function/"
    },
    {
      "name": "noUnknownMediaFeatureName",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown media feature names.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-media-feature-name/"
    },
    {
      "name": "noUnknownProperty",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown properties.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-property/"
    },
    {
      "name": "noUnknownPseudoClass",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown pseudo-class selectors.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-pseudo-class/"
    },
    {
      "name": "noUnknownPseudoElement",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown pseudo-element selectors.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-pseudo-element/"
    },
    {
      "name": "noUnknownTypeSelector",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown type selectors.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-type-selector/"
    },
    {
      "name": "noUnknownUnit",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown CSS units.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-unit/"
    },
    {
      "name": "noUnmatchableAnbSelector",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unmatchable An+B selectors.",
      "url": "https://biomejs.dev/linter/rules/no-unmatchable-anb-selector/"
    },
    {
      "name": "noUnreachable",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unreachable code",
      "url": "https://biomejs.dev/linter/rules/no-unreachable/"
    },
    {
      "name": "noUnreachableSuper",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Ensures the super() constructor is called exactly once on every code  path in a class constructor before this is accessed if the class has a superclass",
      "url": "https://biomejs.dev/linter/rules/no-unreachable-super/"
    },
    {
      "name": "noUnsafeFinally",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow control flow statements in finally blocks.",
      "url": "https://biomejs.dev/linter/rules/no-unsafe-finally/"
    },
    {
      "name": "noUnsafeOptionalChaining",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow the use of optional chaining in contexts where the undefined value is not allowed.",
      "url": "https://biomejs.dev/linter/rules/no-unsafe-optional-chaining/"
    },
    {
      "name": "noUnusedFunctionParameters",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow unused function parameters.",
      "url": "https://biomejs.dev/linter/rules/no-unused-function-parameters/"
    },
    {
      "name": "noUnusedImports",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow unused imports.",
      "url": "https://biomejs.dev/linter/rules/no-unused-imports/"
    },
    {
      "name": "noUnusedLabels",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow unused labels.",
      "url": "https://biomejs.dev/linter/rules/no-unused-labels/"
    },
    {
      "name": "noUnusedPrivateClassMembers",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow unused private class members",
      "url": "https://biomejs.dev/linter/rules/no-unused-private-class-members/"
    },
    {
      "name": "noUnusedVariables",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow unused variables.",
      "url": "https://biomejs.dev/linter/rules/no-unused-variables/"
    },
    {
      "name": "noVoidElementsWithChildren",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "This rules prevents void elements (AKA self-closing elements) from having children.",
      "url": "https://biomejs.dev/linter/rules/no-void-elements-with-children/"
    },
    {
      "name": "noVoidTypeReturn",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow returning a value from a function with the return type 'void'",
      "url": "https://biomejs.dev/linter/rules/no-void-type-return/"
    },
    {
      "name": "useExhaustiveDependencies",
      "recommended": false,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce all dependencies are correctly specified in a React hook.",
      "url": "https://biomejs.dev/linter/rules/use-exhaustive-dependencies/"
    },
    {
      "name": "useHookAtTopLevel",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Enforce that all React hooks are being called from the Top Level component functions.",
      "url": "https://biomejs.dev/linter/rules/use-hook-at-top-level/"
    },
    {
      "name": "useImportExtensions",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Enforce file extensions for relative imports.",
      "url": "https://biomejs.dev/linter/rules/use-import-extensions/"
    },
    {
      "name": "useIsNan",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Require calls to isNaN() when checking for NaN.",
      "url": "https://biomejs.dev/linter/rules/use-is-nan/"
    },
    {
      "name": "useJsxKeyInIterable",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Disallow missing key props in iterators/collection literals.",
      "url": "https://biomejs.dev/linter/rules/use-jsx-key-in-iterable/"
    },
    {
      "name": "useValidForDirection",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce \"for\" loop update clause moving the counter in the right direction.",
      "url": "https://biomejs.dev/linter/rules/use-valid-for-direction/"
    },
    {
      "name": "useValidTypeof",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "This rule checks that the result of a typeof expression is compared to a valid value.",
      "url": "https://biomejs.dev/linter/rules/use-valid-typeof/"
    },
    {
      "name": "useYield",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Require generator functions to contain yield.",
      "url": "https://biomejs.dev/linter/rules/use-yield/"
    }
  ],
  "nursery": [
    {
      "name": "noAwaitInLoop",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow await inside loops.",
      "url": "https://biomejs.dev/linter/rules/no-await-in-loop/"
    },
    {
      "name": "noBitwiseOperators",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow bitwise operators.",
      "url": "https://biomejs.dev/linter/rules/no-bitwise-operators/"
    },
    {
      "name": "noConstantBinaryExpression",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow expressions where the operation doesn't affect the value",
      "url": "https://biomejs.dev/linter/rules/no-constant-binary-expression/"
    },
    {
      "name": "noDestructuredProps",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow destructuring props inside JSX components in Solid projects.",
      "url": "https://biomejs.dev/linter/rules/no-destructured-props/"
    },
    {
      "name": "noExcessiveLinesPerFunction",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Restrict the number of lines of code in a function.",
      "url": "https://biomejs.dev/linter/rules/no-excessive-lines-per-function/"
    },
    {
      "name": "noFloatingPromises",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Require Promise-like statements to be handled appropriately.",
      "url": "https://biomejs.dev/linter/rules/no-floating-promises/"
    },
    {
      "name": "noGlobalDirnameFilename",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow the use of __dirname and __filename in the global scope.",
      "url": "https://biomejs.dev/linter/rules/no-global-dirname-filename/"
    },
    {
      "name": "noImplicitCoercion",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow shorthand type conversions.",
      "url": "https://biomejs.dev/linter/rules/no-implicit-coercion/"
    },
    {
      "name": "noImportCycles",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prevent import cycles.",
      "url": "https://biomejs.dev/linter/rules/no-import-cycles/"
    },
    {
      "name": "noImportantStyles",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow the use of the !important style.",
      "url": "https://biomejs.dev/linter/rules/no-important-styles/"
    },
    {
      "name": "noMagicNumbers",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Reports usage of \"magic numbers\" — numbers used directly instead of being assigned to named constants.",
      "url": "https://biomejs.dev/linter/rules/no-magic-numbers/"
    },
    {
      "name": "noMisusedPromises",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow Promises to be used in places where they are almost certainly a mistake.",
      "url": "https://biomejs.dev/linter/rules/no-misused-promises/"
    },
    {
      "name": "noNestedComponentDefinitions",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Disallows defining React components inside other components.",
      "url": "https://biomejs.dev/linter/rules/no-nested-component-definitions/"
    },
    {
      "name": "noNoninteractiveElementInteractions",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow use event handlers on non-interactive elements.",
      "url": "https://biomejs.dev/linter/rules/no-noninteractive-element-interactions/"
    },
    {
      "name": "noProcessGlobal",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow the use of process global.",
      "url": "https://biomejs.dev/linter/rules/no-process-global/"
    },
    {
      "name": "noQuickfixBiome",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow the use if quickfix.biome inside editor settings file.",
      "url": "https://biomejs.dev/linter/rules/no-quickfix-biome/"
    },
    {
      "name": "noReactPropAssign",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow assigning to React component props.",
      "url": "https://biomejs.dev/linter/rules/no-react-prop-assign/"
    },
    {
      "name": "noRestrictedElements",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow the use of configured elements.",
      "url": "https://biomejs.dev/linter/rules/no-restricted-elements/"
    },
    {
      "name": "noSecrets",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow usage of sensitive data such as API keys and tokens.",
      "url": "https://biomejs.dev/linter/rules/no-secrets/"
    },
    {
      "name": "noShadow",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow variable declarations from shadowing variables declared in the outer scope.",
      "url": "https://biomejs.dev/linter/rules/no-shadow/"
    },
    {
      "name": "noTsIgnore",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Prevents the use of the TypeScript directive @ts-ignore.",
      "url": "https://biomejs.dev/linter/rules/no-ts-ignore/"
    },
    {
      "name": "noUnassignedVariables",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow let or var variables that are read but never assigned.",
      "url": "https://biomejs.dev/linter/rules/no-unassigned-variables/"
    },
    {
      "name": "noUnknownAtRule",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unknown at-rules.",
      "url": "https://biomejs.dev/linter/rules/no-unknown-at-rule/"
    },
    {
      "name": "noUnresolvedImports",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Warn when importing non-existing exports.",
      "url": "https://biomejs.dev/linter/rules/no-unresolved-imports/"
    },
    {
      "name": "noUnwantedPolyfillio",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prevent duplicate polyfills from Polyfill.io.",
      "url": "https://biomejs.dev/linter/rules/no-unwanted-polyfillio/"
    },
    {
      "name": "noUselessBackrefInRegex",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow useless backreferences in regular expression literals that always match an empty string.",
      "url": "https://biomejs.dev/linter/rules/no-useless-backref-in-regex/"
    },
    {
      "name": "noUselessEscapeInString",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow unnecessary escapes in string literals.",
      "url": "https://biomejs.dev/linter/rules/no-useless-escape-in-string/"
    },
    {
      "name": "noUselessUndefined",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow the use of useless undefined.",
      "url": "https://biomejs.dev/linter/rules/no-useless-undefined/"
    },
    {
      "name": "noVueReservedKeys",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Disallow reserved keys in Vue component data and computed properties.",
      "url": "https://biomejs.dev/linter/rules/no-vue-reserved-keys/"
    },
    {
      "name": "noVueReservedProps",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Disallow reserved names to be used as props.",
      "url": "https://biomejs.dev/linter/rules/no-vue-reserved-props/"
    },
    {
      "name": "useAdjacentGetterSetter",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Enforce that getters and setters for the same property are adjacent in class and object definitions.",
      "url": "https://biomejs.dev/linter/rules/use-adjacent-getter-setter/"
    },
    {
      "name": "useConsistentObjectDefinition",
      "recommended": false,
      "fix": "safe",
      "severity": "error",
      "description": "Require the consistent declaration of object literals. Defaults to explicit definitions.",
      "url": "https://biomejs.dev/linter/rules/use-consistent-object-definition/"
    },
    {
      "name": "useConsistentResponse",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Use static Response methods instead of new Response() constructor when possible.",
      "url": "https://biomejs.dev/linter/rules/use-consistent-response/"
    },
    {
      "name": "useExhaustiveSwitchCases",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Require switch-case statements to be exhaustive.",
      "url": "https://biomejs.dev/linter/rules/use-exhaustive-switch-cases/"
    },
    {
      "name": "useExplicitType",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Enforce types in functions, methods, variables, and parameters.",
      "url": "https://biomejs.dev/linter/rules/use-explicit-type/"
    },
    {
      "name": "useExportsLast",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Require that all exports are declared after all non-export statements.",
      "url": "https://biomejs.dev/linter/rules/use-exports-last/"
    },
    {
      "name": "useForComponent",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Enforce using Solid's \\<For /> component for mapping an array to JSX elements.",
      "url": "https://biomejs.dev/linter/rules/use-for-component/"
    },
    {
      "name": "useGoogleFontPreconnect",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Ensure the preconnect attribute is used when using Google Fonts.",
      "url": "https://biomejs.dev/linter/rules/use-google-font-preconnect/"
    },
    {
      "name": "useIndexOf",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Prefer Array#{indexOf,lastIndexOf}() over Array#{findIndex,findLastIndex}() when looking for the index of an item.",
      "url": "https://biomejs.dev/linter/rules/use-index-of/"
    },
    {
      "name": "useIterableCallbackReturn",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce consistent return values in iterable callbacks.",
      "url": "https://biomejs.dev/linter/rules/use-iterable-callback-return/"
    },
    {
      "name": "useJsonImportAttribute",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforces the use of with { type: \"json\" } for JSON module imports.",
      "url": "https://biomejs.dev/linter/rules/use-json-import-attribute/"
    },
    {
      "name": "useNamedOperation",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Enforce specifying the name of GraphQL operations.",
      "url": "https://biomejs.dev/linter/rules/use-named-operation/"
    },
    {
      "name": "useNamingConvention",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Validates that all enum values are capitalized.",
      "url": "https://biomejs.dev/linter/rules/use-naming-convention/"
    },
    {
      "name": "useNumericSeparators",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce the use of numeric separators in numeric literals.",
      "url": "https://biomejs.dev/linter/rules/use-numeric-separators/"
    },
    {
      "name": "useObjectSpread",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Prefer object spread over Object.assign() when constructing new objects.",
      "url": "https://biomejs.dev/linter/rules/use-object-spread/"
    },
    {
      "name": "useParseIntRadix",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce the consistent use of the radix argument when using parseInt().",
      "url": "https://biomejs.dev/linter/rules/use-parse-int-radix/"
    },
    {
      "name": "useReactFunctionComponents",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Enforce that components are defined as functions and never as classes.",
      "url": "https://biomejs.dev/linter/rules/use-react-function-components/"
    },
    {
      "name": "useReadonlyClassProperties",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce marking members as readonly if they are never modified outside the constructor.",
      "url": "https://biomejs.dev/linter/rules/use-readonly-class-properties/"
    },
    {
      "name": "useSingleJsDocAsterisk",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce JSDoc comment lines to start with a single asterisk, except for the first one.",
      "url": "https://biomejs.dev/linter/rules/use-single-js-doc-asterisk/"
    },
    {
      "name": "useSortedClasses",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce the sorting of CSS utility classes.",
      "url": "https://biomejs.dev/linter/rules/use-sorted-classes/"
    },
    {
      "name": "useSymbolDescription",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Require a description parameter for the Symbol().",
      "url": "https://biomejs.dev/linter/rules/use-symbol-description/"
    },
    {
      "name": "useUnifiedTypeSignature",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow overload signatures that can be unified into a single signature.",
      "url": "https://biomejs.dev/linter/rules/use-unified-type-signature/"
    },
    {
      "name": "useUniqueElementIds",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Prevent the usage of static string literal id attribute on elements.",
      "url": "https://biomejs.dev/linter/rules/use-unique-element-ids/"
    }
  ],
  "performance": [
    {
      "name": "noAccumulatingSpread",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of spread (...) syntax on accumulators.",
      "url": "https://biomejs.dev/linter/rules/no-accumulating-spread/"
    },
    {
      "name": "noBarrelFile",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of barrel file.",
      "url": "https://biomejs.dev/linter/rules/no-barrel-file/"
    },
    {
      "name": "noDelete",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow the use of the delete operator.",
      "url": "https://biomejs.dev/linter/rules/no-delete/"
    },
    {
      "name": "noDynamicNamespaceImportAccess",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow accessing namespace imports dynamically.",
      "url": "https://biomejs.dev/linter/rules/no-dynamic-namespace-import-access/"
    },
    {
      "name": "noImgElement",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prevent usage of \\<img> element in a Next.js project.",
      "url": "https://biomejs.dev/linter/rules/no-img-element/"
    },
    {
      "name": "noNamespaceImport",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of namespace imports.",
      "url": "https://biomejs.dev/linter/rules/no-namespace-import/"
    },
    {
      "name": "noReExportAll",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Avoid re-export all.",
      "url": "https://biomejs.dev/linter/rules/no-re-export-all/"
    },
    {
      "name": "useTopLevelRegex",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Require regex literals to be declared at the top level.",
      "url": "https://biomejs.dev/linter/rules/use-top-level-regex/"
    }
  ],
  "security": [
    {
      "name": "noBlankTarget",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Disallow target=\"_blank\" attribute without rel=\"noopener\".",
      "url": "https://biomejs.dev/linter/rules/no-blank-target/"
    },
    {
      "name": "noDangerouslySetInnerHtml",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Prevent the usage of dangerous JSX props",
      "url": "https://biomejs.dev/linter/rules/no-dangerously-set-inner-html/"
    },
    {
      "name": "noDangerouslySetInnerHtmlWithChildren",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Report when a DOM element or a component uses both children and dangerouslySetInnerHTML prop.",
      "url": "https://biomejs.dev/linter/rules/no-dangerously-set-inner-html-with-children/"
    },
    {
      "name": "noGlobalEval",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow the use of global eval().",
      "url": "https://biomejs.dev/linter/rules/no-global-eval/"
    }
  ],
  "style": [
    {
      "name": "noCommonJs",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow use of CommonJs module system in favor of ESM style imports.",
      "url": "https://biomejs.dev/linter/rules/no-common-js/"
    },
    {
      "name": "noDefaultExport",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow default exports.",
      "url": "https://biomejs.dev/linter/rules/no-default-export/"
    },
    {
      "name": "noDescendingSpecificity",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow a lower specificity selector from coming after a higher specificity selector.",
      "url": "https://biomejs.dev/linter/rules/no-descending-specificity/"
    },
    {
      "name": "noDoneCallback",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow using a callback in asynchronous tests and hooks.",
      "url": "https://biomejs.dev/linter/rules/no-done-callback/"
    },
    {
      "name": "noEnum",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow TypeScript enum.",
      "url": "https://biomejs.dev/linter/rules/no-enum/"
    },
    {
      "name": "noExportedImports",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow exporting an imported variable.",
      "url": "https://biomejs.dev/linter/rules/no-exported-imports/"
    },
    {
      "name": "noHeadElement",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prevent usage of \\<head> element in a Next.js project.",
      "url": "https://biomejs.dev/linter/rules/no-head-element/"
    },
    {
      "name": "noImplicitBoolean",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow implicit true values on JSX boolean attributes",
      "url": "https://biomejs.dev/linter/rules/no-implicit-boolean/"
    },
    {
      "name": "noInferrableTypes",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow type annotations for variables, parameters, and class properties initialized with a literal expression.",
      "url": "https://biomejs.dev/linter/rules/no-inferrable-types/"
    },
    {
      "name": "noNamespace",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of TypeScript's namespaces.",
      "url": "https://biomejs.dev/linter/rules/no-namespace/"
    },
    {
      "name": "noNegationElse",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow negation in the condition of an if statement if it has an else clause.",
      "url": "https://biomejs.dev/linter/rules/no-negation-else/"
    },
    {
      "name": "noNestedTernary",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow nested ternary expressions.",
      "url": "https://biomejs.dev/linter/rules/no-nested-ternary/"
    },
    {
      "name": "noNonNullAssertion",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow non-null assertions using the ! postfix operator.",
      "url": "https://biomejs.dev/linter/rules/no-non-null-assertion/"
    },
    {
      "name": "noParameterAssign",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow reassigning function parameters.",
      "url": "https://biomejs.dev/linter/rules/no-parameter-assign/"
    },
    {
      "name": "noParameterProperties",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of parameter properties in class constructors.",
      "url": "https://biomejs.dev/linter/rules/no-parameter-properties/"
    },
    {
      "name": "noProcessEnv",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow the use of process.env.",
      "url": "https://biomejs.dev/linter/rules/no-process-env/"
    },
    {
      "name": "noRestrictedGlobals",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "This rule allows you to specify global variable names that you don’t want to use in your application.",
      "url": "https://biomejs.dev/linter/rules/no-restricted-globals/"
    },
    {
      "name": "noRestrictedImports",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow specified modules when loaded by import or require.",
      "url": "https://biomejs.dev/linter/rules/no-restricted-imports/"
    },
    {
      "name": "noRestrictedTypes",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow user defined types.",
      "url": "https://biomejs.dev/linter/rules/no-restricted-types/"
    },
    {
      "name": "noShoutyConstants",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow the use of constants which its value is the upper-case version of its name.",
      "url": "https://biomejs.dev/linter/rules/no-shouty-constants/"
    },
    {
      "name": "noSubstr",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce the use of String.slice() over String.substr() and String.substring().",
      "url": "https://biomejs.dev/linter/rules/no-substr/"
    },
    {
      "name": "noUnusedTemplateLiteral",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow template literals if interpolation and special-character handling are not needed",
      "url": "https://biomejs.dev/linter/rules/no-unused-template-literal/"
    },
    {
      "name": "noUselessElse",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow else block when the if block breaks early.",
      "url": "https://biomejs.dev/linter/rules/no-useless-else/"
    },
    {
      "name": "noValueAtRule",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow use of @value rule in css modules.",
      "url": "https://biomejs.dev/linter/rules/no-value-at-rule/"
    },
    {
      "name": "noYodaExpression",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow the use of yoda expressions.",
      "url": "https://biomejs.dev/linter/rules/no-yoda-expression/"
    },
    {
      "name": "useArrayLiterals",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow Array constructors.",
      "url": "https://biomejs.dev/linter/rules/use-array-literals/"
    },
    {
      "name": "useAsConstAssertion",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce the use of as const over literal type and type annotation.",
      "url": "https://biomejs.dev/linter/rules/use-as-const-assertion/"
    },
    {
      "name": "useAtIndex",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Use at() instead of integer index access.",
      "url": "https://biomejs.dev/linter/rules/use-at-index/"
    },
    {
      "name": "useBlockStatements",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Requires following curly brace conventions.",
      "url": "https://biomejs.dev/linter/rules/use-block-statements/"
    },
    {
      "name": "useCollapsedElseIf",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce using else if instead of nested if in else clauses.",
      "url": "https://biomejs.dev/linter/rules/use-collapsed-else-if/"
    },
    {
      "name": "useCollapsedIf",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce using single if instead of nested if clauses.",
      "url": "https://biomejs.dev/linter/rules/use-collapsed-if/"
    },
    {
      "name": "useComponentExportOnlyModules",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Enforce declaring components only within modules that export React Components exclusively.",
      "url": "https://biomejs.dev/linter/rules/use-component-export-only-modules/"
    },
    {
      "name": "useConsistentArrayType",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Require consistently using either T\\[] or Array\\<T>",
      "url": "https://biomejs.dev/linter/rules/use-consistent-array-type/"
    },
    {
      "name": "useConsistentBuiltinInstantiation",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce the use of new for all builtins, except String, Number and Boolean.",
      "url": "https://biomejs.dev/linter/rules/use-consistent-builtin-instantiation/"
    },
    {
      "name": "useConsistentCurlyBraces",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "This rule enforces consistent use of curly braces inside JSX attributes and JSX children.",
      "url": "https://biomejs.dev/linter/rules/use-consistent-curly-braces/"
    },
    {
      "name": "useConsistentMemberAccessibility",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Require consistent accessibility modifiers on class properties and methods.",
      "url": "https://biomejs.dev/linter/rules/use-consistent-member-accessibility/"
    },
    {
      "name": "useConst",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Require const declarations for variables that are only assigned once.",
      "url": "https://biomejs.dev/linter/rules/use-const/"
    },
    {
      "name": "useDefaultParameterLast",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Enforce default function parameters and optional function parameters to be last.",
      "url": "https://biomejs.dev/linter/rules/use-default-parameter-last/"
    },
    {
      "name": "useDefaultSwitchClause",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Require the default clause in switch statements.",
      "url": "https://biomejs.dev/linter/rules/use-default-switch-clause/"
    },
    {
      "name": "useDeprecatedReason",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Require specifying the reason argument when using @deprecated directive",
      "url": "https://biomejs.dev/linter/rules/use-deprecated-reason/"
    },
    {
      "name": "useEnumInitializers",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Require that each enum member value be explicitly initialized.",
      "url": "https://biomejs.dev/linter/rules/use-enum-initializers/"
    },
    {
      "name": "useExplicitLengthCheck",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforce explicitly comparing the length, size, byteLength or byteOffset property of a value.",
      "url": "https://biomejs.dev/linter/rules/use-explicit-length-check/"
    },
    {
      "name": "useExponentiationOperator",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Disallow the use of Math.pow in favor of the ** operator.",
      "url": "https://biomejs.dev/linter/rules/use-exponentiation-operator/"
    },
    {
      "name": "useExportType",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Promotes the use of export type for types.",
      "url": "https://biomejs.dev/linter/rules/use-export-type/"
    },
    {
      "name": "useFilenamingConvention",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Enforce naming conventions for JavaScript and TypeScript filenames.",
      "url": "https://biomejs.dev/linter/rules/use-filenaming-convention/"
    },
    {
      "name": "useForOf",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "This rule recommends a for-of loop when in a for loop, the index used to extract an item from the iterated array.",
      "url": "https://biomejs.dev/linter/rules/use-for-of/"
    },
    {
      "name": "useFragmentSyntax",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "This rule enforces the use of \\<>...\\</> over \\<Fragment>...\\</Fragment>.",
      "url": "https://biomejs.dev/linter/rules/use-fragment-syntax/"
    },
    {
      "name": "useImportType",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Promotes the use of import type for types.",
      "url": "https://biomejs.dev/linter/rules/use-import-type/"
    },
    {
      "name": "useLiteralEnumMembers",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Require all enum members to be literal values.",
      "url": "https://biomejs.dev/linter/rules/use-literal-enum-members/"
    },
    {
      "name": "useNamingConvention",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce naming conventions for everything across a codebase.",
      "url": "https://biomejs.dev/linter/rules/use-naming-convention/"
    },
    {
      "name": "useNodeAssertStrict",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Promotes the usage of node:assert/strict over node:assert.",
      "url": "https://biomejs.dev/linter/rules/use-node-assert-strict/"
    },
    {
      "name": "useNodejsImportProtocol",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Enforces using the node: protocol for Node.js builtin modules.",
      "url": "https://biomejs.dev/linter/rules/use-nodejs-import-protocol/"
    },
    {
      "name": "useNumberNamespace",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Use the Number properties instead of global ones.",
      "url": "https://biomejs.dev/linter/rules/use-number-namespace/"
    },
    {
      "name": "useSelfClosingElements",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Prevent extra closing tags for components without children.",
      "url": "https://biomejs.dev/linter/rules/use-self-closing-elements/"
    },
    {
      "name": "useShorthandAssign",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Require assignment operator shorthand where possible.",
      "url": "https://biomejs.dev/linter/rules/use-shorthand-assign/"
    },
    {
      "name": "useShorthandFunctionType",
      "recommended": true,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce using function types instead of object type with call signatures.",
      "url": "https://biomejs.dev/linter/rules/use-shorthand-function-type/"
    },
    {
      "name": "useSingleVarDeclarator",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Disallow multiple variable declarations in the same variable statement",
      "url": "https://biomejs.dev/linter/rules/use-single-var-declarator/"
    },
    {
      "name": "useTemplate",
      "recommended": true,
      "fix": "unsafe",
      "severity": "info",
      "description": "Prefer template literals over string concatenation.",
      "url": "https://biomejs.dev/linter/rules/use-template/"
    },
    {
      "name": "useThrowNewError",
      "recommended": false,
      "fix": "unsafe",
      "severity": "info",
      "description": "Require new when throwing an error.",
      "url": "https://biomejs.dev/linter/rules/use-throw-new-error/"
    },
    {
      "name": "useThrowOnlyError",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow throwing non-Error values.",
      "url": "https://biomejs.dev/linter/rules/use-throw-only-error/"
    },
    {
      "name": "useTrimStartEnd",
      "recommended": false,
      "fix": "safe",
      "severity": "info",
      "description": "Enforce the use of String.trimStart() and String.trimEnd() over String.trimLeft() and String.trimRight().",
      "url": "https://biomejs.dev/linter/rules/use-trim-start-end/"
    }
  ],
  "suspicious": [
    {
      "name": "noAlert",
      "recommended": false,
      "fix": "none",
      "severity": "info",
      "description": "Disallow the use of alert, confirm, and prompt.",
      "url": "https://biomejs.dev/linter/rules/no-alert/"
    },
    {
      "name": "noApproximativeNumericConstant",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Use standard constants instead of approximated literals.",
      "url": "https://biomejs.dev/linter/rules/no-approximative-numeric-constant/"
    },
    {
      "name": "noArrayIndexKey",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Discourage the usage of Array index in keys.",
      "url": "https://biomejs.dev/linter/rules/no-array-index-key/"
    },
    {
      "name": "noAssignInExpressions",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow assignments in expressions.",
      "url": "https://biomejs.dev/linter/rules/no-assign-in-expressions/"
    },
    {
      "name": "noAsyncPromiseExecutor",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallows using an async function as a Promise executor.",
      "url": "https://biomejs.dev/linter/rules/no-async-promise-executor/"
    },
    {
      "name": "noCatchAssign",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow reassigning exceptions in catch clauses.",
      "url": "https://biomejs.dev/linter/rules/no-catch-assign/"
    },
    {
      "name": "noClassAssign",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow reassigning class members.",
      "url": "https://biomejs.dev/linter/rules/no-class-assign/"
    },
    {
      "name": "noCommentText",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Prevent comments from being inserted as text nodes",
      "url": "https://biomejs.dev/linter/rules/no-comment-text/"
    },
    {
      "name": "noCompareNegZero",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Disallow comparing against -0",
      "url": "https://biomejs.dev/linter/rules/no-compare-neg-zero/"
    },
    {
      "name": "noConfusingLabels",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow labeled statements that are not loops.",
      "url": "https://biomejs.dev/linter/rules/no-confusing-labels/"
    },
    {
      "name": "noConfusingVoidType",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow void type outside of generic or return types.",
      "url": "https://biomejs.dev/linter/rules/no-confusing-void-type/"
    },
    {
      "name": "noConsole",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow the use of console.",
      "url": "https://biomejs.dev/linter/rules/no-console/"
    },
    {
      "name": "noConstEnum",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow TypeScript const enum",
      "url": "https://biomejs.dev/linter/rules/no-const-enum/"
    },
    {
      "name": "noControlCharactersInRegex",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Prevents from having control characters and some escape sequences that match control characters in regular expression literals.",
      "url": "https://biomejs.dev/linter/rules/no-control-characters-in-regex/"
    },
    {
      "name": "noDebugger",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Disallow the use of debugger",
      "url": "https://biomejs.dev/linter/rules/no-debugger/"
    },
    {
      "name": "noDocumentCookie",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow direct assignments to document.cookie.",
      "url": "https://biomejs.dev/linter/rules/no-document-cookie/"
    },
    {
      "name": "noDocumentImportInPage",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prevents importing next/document outside of pages/_document.jsx in Next.js projects.",
      "url": "https://biomejs.dev/linter/rules/no-document-import-in-page/"
    },
    {
      "name": "noDoubleEquals",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Require the use of === and !==.",
      "url": "https://biomejs.dev/linter/rules/no-double-equals/"
    },
    {
      "name": "noDuplicateAtImportRules",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate @import rules.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-at-import-rules/"
    },
    {
      "name": "noDuplicateCase",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate case labels.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-case/"
    },
    {
      "name": "noDuplicateClassMembers",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate class members.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-class-members/"
    },
    {
      "name": "noDuplicateCustomProperties",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate custom properties within declaration blocks.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-custom-properties/"
    },
    {
      "name": "noDuplicateElseIf",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate conditions in if-else-if chains",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-else-if/"
    },
    {
      "name": "noDuplicateFields",
      "recommended": true,
      "fix": "none",
      "severity": "info",
      "description": "No duplicated fields in GraphQL operations.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-fields/"
    },
    {
      "name": "noDuplicateFontNames",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate names within font families.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-font-names/"
    },
    {
      "name": "noDuplicateJsxProps",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Prevents JSX properties to be assigned multiple times.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-jsx-props/"
    },
    {
      "name": "noDuplicateObjectKeys",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Disallow two keys with the same name inside objects.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-object-keys/"
    },
    {
      "name": "noDuplicateParameters",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate function parameter name.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-parameters/"
    },
    {
      "name": "noDuplicateProperties",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate properties within declaration blocks.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-properties/"
    },
    {
      "name": "noDuplicateSelectorsKeyframeBlock",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow duplicate selectors within keyframe blocks.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-selectors-keyframe-block/"
    },
    {
      "name": "noDuplicateTestHooks",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "A describe block should not contain duplicate hooks.",
      "url": "https://biomejs.dev/linter/rules/no-duplicate-test-hooks/"
    },
    {
      "name": "noEmptyBlock",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow CSS empty blocks.",
      "url": "https://biomejs.dev/linter/rules/no-empty-block/"
    },
    {
      "name": "noEmptyBlockStatements",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow empty block statements and static blocks.",
      "url": "https://biomejs.dev/linter/rules/no-empty-block-statements/"
    },
    {
      "name": "noEmptyInterface",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Disallow the declaration of empty interfaces.",
      "url": "https://biomejs.dev/linter/rules/no-empty-interface/"
    },
    {
      "name": "noEvolvingTypes",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow variables from evolving into any type through reassignments.",
      "url": "https://biomejs.dev/linter/rules/no-evolving-types/"
    },
    {
      "name": "noExplicitAny",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the any type usage.",
      "url": "https://biomejs.dev/linter/rules/no-explicit-any/"
    },
    {
      "name": "noExportsInTest",
      "recommended": false,
      "fix": "none",
      "severity": "error",
      "description": "Disallow using export or module.exports in files containing tests",
      "url": "https://biomejs.dev/linter/rules/no-exports-in-test/"
    },
    {
      "name": "noExtraNonNullAssertion",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Prevents the wrong usage of the non-null assertion operator (!) in TypeScript files.",
      "url": "https://biomejs.dev/linter/rules/no-extra-non-null-assertion/"
    },
    {
      "name": "noFallthroughSwitchClause",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow fallthrough of switch clauses.",
      "url": "https://biomejs.dev/linter/rules/no-fallthrough-switch-clause/"
    },
    {
      "name": "noFocusedTests",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow focused tests.",
      "url": "https://biomejs.dev/linter/rules/no-focused-tests/"
    },
    {
      "name": "noFunctionAssign",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow reassigning function declarations.",
      "url": "https://biomejs.dev/linter/rules/no-function-assign/"
    },
    {
      "name": "noGlobalAssign",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow assignments to native objects and read-only global variables.",
      "url": "https://biomejs.dev/linter/rules/no-global-assign/"
    },
    {
      "name": "noGlobalIsFinite",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Use Number.isFinite instead of global isFinite.",
      "url": "https://biomejs.dev/linter/rules/no-global-is-finite/"
    },
    {
      "name": "noGlobalIsNan",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Use Number.isNaN instead of global isNaN.",
      "url": "https://biomejs.dev/linter/rules/no-global-is-nan/"
    },
    {
      "name": "noHeadImportInDocument",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Prevent using the next/head module in pages/_document.js on Next.js projects.",
      "url": "https://biomejs.dev/linter/rules/no-head-import-in-document/"
    },
    {
      "name": "noImplicitAnyLet",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow use of implicit any type on variable declarations.",
      "url": "https://biomejs.dev/linter/rules/no-implicit-any-let/"
    },
    {
      "name": "noImportAssign",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow assigning to imported bindings",
      "url": "https://biomejs.dev/linter/rules/no-import-assign/"
    },
    {
      "name": "noImportantInKeyframe",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow invalid !important within keyframe declarations",
      "url": "https://biomejs.dev/linter/rules/no-important-in-keyframe/"
    },
    {
      "name": "noIrregularWhitespace",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallows the use of irregular whitespace characters.",
      "url": "https://biomejs.dev/linter/rules/no-irregular-whitespace/"
    },
    {
      "name": "noLabelVar",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow labels that share a name with a variable",
      "url": "https://biomejs.dev/linter/rules/no-label-var/"
    },
    {
      "name": "noMisleadingCharacterClass",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Disallow characters made with multiple code points in character class syntax.",
      "url": "https://biomejs.dev/linter/rules/no-misleading-character-class/"
    },
    {
      "name": "noMisleadingInstantiator",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce proper usage of new and constructor.",
      "url": "https://biomejs.dev/linter/rules/no-misleading-instantiator/"
    },
    {
      "name": "noMisplacedAssertion",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Checks that the assertion function, for example expect, is placed inside an it() function call.",
      "url": "https://biomejs.dev/linter/rules/no-misplaced-assertion/"
    },
    {
      "name": "noMisrefactoredShorthandAssign",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Disallow shorthand assign when variable appears on both sides.",
      "url": "https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign/"
    },
    {
      "name": "noOctalEscape",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow octal escape sequences in string literals",
      "url": "https://biomejs.dev/linter/rules/no-octal-escape/"
    },
    {
      "name": "noPrototypeBuiltins",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Disallow direct use of Object.prototype builtins.",
      "url": "https://biomejs.dev/linter/rules/no-prototype-builtins/"
    },
    {
      "name": "noReactSpecificProps",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Prevents React-specific JSX properties from being used.",
      "url": "https://biomejs.dev/linter/rules/no-react-specific-props/"
    },
    {
      "name": "noRedeclare",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow variable, function, class, and type redeclarations in the same scope.",
      "url": "https://biomejs.dev/linter/rules/no-redeclare/"
    },
    {
      "name": "noRedundantUseStrict",
      "recommended": true,
      "fix": "safe",
      "severity": "warn",
      "description": "Prevents from having redundant \"use strict\".",
      "url": "https://biomejs.dev/linter/rules/no-redundant-use-strict/"
    },
    {
      "name": "noSelfCompare",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow comparisons where both sides are exactly the same.",
      "url": "https://biomejs.dev/linter/rules/no-self-compare/"
    },
    {
      "name": "noShadowRestrictedNames",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow identifiers from shadowing restricted names.",
      "url": "https://biomejs.dev/linter/rules/no-shadow-restricted-names/"
    },
    {
      "name": "noShorthandPropertyOverrides",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow shorthand properties that override related longhand properties.",
      "url": "https://biomejs.dev/linter/rules/no-shorthand-property-overrides/"
    },
    {
      "name": "noSkippedTests",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow disabled tests.",
      "url": "https://biomejs.dev/linter/rules/no-skipped-tests/"
    },
    {
      "name": "noSparseArray",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Prevents the use of sparse arrays (arrays with holes).",
      "url": "https://biomejs.dev/linter/rules/no-sparse-array/"
    },
    {
      "name": "noSuspiciousSemicolonInJsx",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "It detects possible \"wrong\" semicolons inside JSX elements.",
      "url": "https://biomejs.dev/linter/rules/no-suspicious-semicolon-in-jsx/"
    },
    {
      "name": "noTemplateCurlyInString",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow template literal placeholder syntax in regular strings.",
      "url": "https://biomejs.dev/linter/rules/no-template-curly-in-string/"
    },
    {
      "name": "noThenProperty",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow then property.",
      "url": "https://biomejs.dev/linter/rules/no-then-property/"
    },
    {
      "name": "noUnsafeDeclarationMerging",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow unsafe declaration merging between interfaces and classes.",
      "url": "https://biomejs.dev/linter/rules/no-unsafe-declaration-merging/"
    },
    {
      "name": "noUnsafeNegation",
      "recommended": true,
      "fix": "unsafe",
      "severity": "error",
      "description": "Disallow using unsafe negation.",
      "url": "https://biomejs.dev/linter/rules/no-unsafe-negation/"
    },
    {
      "name": "noVar",
      "recommended": false,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Disallow the use of var",
      "url": "https://biomejs.dev/linter/rules/no-var/"
    },
    {
      "name": "noWith",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Disallow with statements in non-strict contexts.",
      "url": "https://biomejs.dev/linter/rules/no-with/"
    },
    {
      "name": "useAdjacentOverloadSignatures",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Disallow the use of overload signatures that are not next to each other.",
      "url": "https://biomejs.dev/linter/rules/use-adjacent-overload-signatures/"
    },
    {
      "name": "useAwait",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Ensure async functions utilize await.",
      "url": "https://biomejs.dev/linter/rules/use-await/"
    },
    {
      "name": "useDefaultSwitchClauseLast",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Enforce default clauses in switch statements to be last",
      "url": "https://biomejs.dev/linter/rules/use-default-switch-clause-last/"
    },
    {
      "name": "useErrorMessage",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Enforce passing a message value when creating a built-in error.",
      "url": "https://biomejs.dev/linter/rules/use-error-message/"
    },
    {
      "name": "useGetterReturn",
      "recommended": true,
      "fix": "none",
      "severity": "error",
      "description": "Enforce get methods to always return a value.",
      "url": "https://biomejs.dev/linter/rules/use-getter-return/"
    },
    {
      "name": "useGoogleFontDisplay",
      "recommended": true,
      "fix": "none",
      "severity": "warn",
      "description": "Enforces the use of a recommended display strategy with Google Fonts.",
      "url": "https://biomejs.dev/linter/rules/use-google-font-display/"
    },
    {
      "name": "useGuardForIn",
      "recommended": false,
      "fix": "none",
      "severity": "warn",
      "description": "Require for-in loops to include an if statement.",
      "url": "https://biomejs.dev/linter/rules/use-guard-for-in/"
    },
    {
      "name": "useIsArray",
      "recommended": true,
      "fix": "unsafe",
      "severity": "warn",
      "description": "Use Array.isArray() instead of instanceof Array.",
      "url": "https://biomejs.dev/linter/rules/use-is-array/"
    },
    {
      "name": "useNamespaceKeyword",
      "recommended": true,
      "fix": "safe",
      "severity": "error",
      "description": "Require using the namespace keyword over the module keyword to declare TypeScript namespaces.",
      "url": "https://biomejs.dev/linter/rules/use-namespace-keyword/"
    },
    {
      "name": "useNumberToFixedDigitsArgument",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Enforce using the digits argument with Number#toFixed().",
      "url": "https://biomejs.dev/linter/rules/use-number-to-fixed-digits-argument/"
    },
    {
      "name": "useStrictMode",
      "recommended": false,
      "fix": "safe",
      "severity": "warn",
      "description": "Enforce the use of the directive \"use strict\" in script files.",
      "url": "https://biomejs.dev/linter/rules/use-strict-mode/"
    }
  ]
}
